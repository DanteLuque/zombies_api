{
	"info": {
		"_postman_id": "26c49561-fb5e-44f7-8043-96388e8581c1",
		"name": "zombies",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23587008"
	},
	"item": [
		{
			"name": "origenes",
			"item": [
				{
					"name": "getAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/v1/origin",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"v1",
								"origin"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "Get data",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:4000/api/v1/origin",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"v1",
										"origin"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "688"
								},
								{
									"key": "ETag",
									"value": "W/\"2b0-mb1mJjacI8ih8oskI780DqlXi10\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 May 2025 06:53:14 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"ID\": 1,\n        \"ORIGEN\": \"Virus experimental\",\n        \"created_at\": \"2025-05-22T06:04:47.000Z\",\n        \"updated_at\": \"2025-05-22T06:04:47.000Z\",\n        \"deleted_at\": null\n    },\n    {\n        \"ID\": 2,\n        \"ORIGEN\": \"Radiación nuclear\",\n        \"created_at\": \"2025-05-22T06:04:47.000Z\",\n        \"updated_at\": \"2025-05-22T06:04:47.000Z\",\n        \"deleted_at\": null\n    },\n    {\n        \"ID\": 3,\n        \"ORIGEN\": \"Magia oscura\",\n        \"created_at\": \"2025-05-22T06:04:47.000Z\",\n        \"updated_at\": \"2025-05-22T06:04:47.000Z\",\n        \"deleted_at\": null\n    },\n    {\n        \"ID\": 4,\n        \"ORIGEN\": \"Parásito alienígena\",\n        \"created_at\": \"2025-05-22T06:04:47.000Z\",\n        \"updated_at\": \"2025-05-22T06:04:47.000Z\",\n        \"deleted_at\": null\n    },\n    {\n        \"ID\": 5,\n        \"ORIGEN\": \"Nanobots descontrolados\",\n        \"created_at\": \"2025-05-22T06:04:47.000Z\",\n        \"updated_at\": \"2025-05-22T06:04:47.000Z\",\n        \"deleted_at\": null\n    }\n]"
						}
					]
				},
				{
					"name": "getById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/v1/origin/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"v1",
								"origin",
								"2"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "getById",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:4000/api/v1/origin/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"v1",
										"origin",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "136"
								},
								{
									"key": "ETag",
									"value": "W/\"88-l0Nfzihnhl09rP3yfAbNlLBqQuY\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 May 2025 06:54:31 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"ID\": 2,\n    \"ORIGEN\": \"Radiación nuclear\",\n    \"created_at\": \"2025-05-22T06:04:47.000Z\",\n    \"updated_at\": \"2025-05-22T06:04:47.000Z\",\n    \"deleted_at\": null\n}"
						}
					]
				},
				{
					"name": "Post data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"origen\": \"Posesión demoniaca\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/v1/origin/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"v1",
								"origin",
								""
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": [
						{
							"name": "Post data",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"origen\": \"Posesión demoniaca\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/v1/origin/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"v1",
										"origin",
										""
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "34"
								},
								{
									"key": "ETag",
									"value": "W/\"22-y90IgI0dWfwNVD31ENQgDg8Zamg\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 May 2025 06:55:27 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Origen creado\",\n    \"id\": 6\n}"
						}
					]
				},
				{
					"name": "Update data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"origen\": \"Actividad paranormal\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/v1/origin/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"v1",
								"origin",
								"6"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "Update data",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"origen\": \"Actividad paranormal\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/v1/origin/6",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"v1",
										"origin",
										"6"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "32"
								},
								{
									"key": "ETag",
									"value": "W/\"20-Rre/VDL2NaWj/OC1ZqegzS25WiM\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 May 2025 06:56:25 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Origen actualizado\"\n}"
						}
					]
				},
				{
					"name": "Delete data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/v1/origin/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"v1",
								"origin",
								"6"
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "Delete data",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/v1/origin/6",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"v1",
										"origin",
										"6"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "30"
								},
								{
									"key": "ETag",
									"value": "W/\"1e-sh5j6yhYCif2Nt0LkoAGQ3PNrow\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 May 2025 06:56:48 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Origen eliminado\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "zombie",
			"item": [
				{
					"name": "getAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/v1/zombie",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"v1",
								"zombie"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "getAll",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:4000/api/v1/zombie",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"v1",
										"zombie"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "1557"
								},
								{
									"key": "ETag",
									"value": "W/\"615-sQetIXLMyy0X3b62v7zvcYe71jI\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 May 2025 07:06:38 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"ID\": 1,\n        \"NOMBRE\": \"Zombie Corredor\",\n        \"DESCRIPCION\": \"Extremadamente rápido pero frágil.\",\n        \"ORIGEN_ID\": 1,\n        \"VELOCIDAD\": 9,\n        \"FUERZA\": 4,\n        \"RESISTENCIA\": 3,\n        \"HUMANIDAD\": 1,\n        \"created_at\": \"2025-05-22T06:04:47.000Z\",\n        \"updated_at\": \"2025-05-22T06:04:47.000Z\",\n        \"deleted_at\": null,\n        \"ORIGEN_NOMBRE\": \"Virus experimental\"\n    },\n    {\n        \"ID\": 2,\n        \"NOMBRE\": \"Zombie Radiactivo\",\n        \"DESCRIPCION\": \"Brilla en la oscuridad y es tóxico al contacto.\",\n        \"ORIGEN_ID\": 2,\n        \"VELOCIDAD\": 3,\n        \"FUERZA\": 7,\n        \"RESISTENCIA\": 6,\n        \"HUMANIDAD\": 2,\n        \"created_at\": \"2025-05-22T06:04:47.000Z\",\n        \"updated_at\": \"2025-05-22T06:04:47.000Z\",\n        \"deleted_at\": null,\n        \"ORIGEN_NOMBRE\": \"Radiación nuclear\"\n    },\n    {\n        \"ID\": 3,\n        \"NOMBRE\": \"Necrozombi\",\n        \"DESCRIPCION\": \"Reanimado por rituales arcanos, resistente a las armas comunes.\",\n        \"ORIGEN_ID\": 3,\n        \"VELOCIDAD\": 2,\n        \"FUERZA\": 5,\n        \"RESISTENCIA\": 9,\n        \"HUMANIDAD\": 0,\n        \"created_at\": \"2025-05-22T06:04:47.000Z\",\n        \"updated_at\": \"2025-05-22T06:04:47.000Z\",\n        \"deleted_at\": null,\n        \"ORIGEN_NOMBRE\": \"Magia oscura\"\n    },\n    {\n        \"ID\": 4,\n        \"NOMBRE\": \"Huésped Alienígena\",\n        \"DESCRIPCION\": \"Controlado por un parásito que le da fuerza sobrehumana.\",\n        \"ORIGEN_ID\": 4,\n        \"VELOCIDAD\": 5,\n        \"FUERZA\": 8,\n        \"RESISTENCIA\": 7,\n        \"HUMANIDAD\": 3,\n        \"created_at\": \"2025-05-22T06:04:47.000Z\",\n        \"updated_at\": \"2025-05-22T06:04:47.000Z\",\n        \"deleted_at\": null,\n        \"ORIGEN_NOMBRE\": \"Parásito alienígena\"\n    },\n    {\n        \"ID\": 5,\n        \"NOMBRE\": \"Zombie Cibernético\",\n        \"DESCRIPCION\": \"Infectado con nanobots, con partes metálicas en el cuerpo.\",\n        \"ORIGEN_ID\": 5,\n        \"VELOCIDAD\": 6,\n        \"FUERZA\": 6,\n        \"RESISTENCIA\": 8,\n        \"HUMANIDAD\": 4,\n        \"created_at\": \"2025-05-22T06:04:47.000Z\",\n        \"updated_at\": \"2025-05-22T06:04:47.000Z\",\n        \"deleted_at\": null,\n        \"ORIGEN_NOMBRE\": \"Nanobots descontrolados\"\n    }\n]"
						}
					]
				},
				{
					"name": "getById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:4000/api/v1/zombie/2",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"v1",
								"zombie",
								"2"
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "getAll Copy",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:4000/api/v1/zombie/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"v1",
										"zombie",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "306"
								},
								{
									"key": "ETag",
									"value": "W/\"132-Yl2NsLpXn0Cuz3BrifLJY0QzKyM\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 May 2025 07:14:56 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"ID\": 2,\n    \"NOMBRE\": \"Zombie Radiactivo\",\n    \"DESCRIPCION\": \"Brilla en la oscuridad y es tóxico al contacto.\",\n    \"ORIGEN_ID\": 2,\n    \"VELOCIDAD\": 3,\n    \"FUERZA\": 7,\n    \"RESISTENCIA\": 6,\n    \"HUMANIDAD\": 2,\n    \"created_at\": \"2025-05-22T06:04:47.000Z\",\n    \"updated_at\": \"2025-05-22T06:04:47.000Z\",\n    \"deleted_at\": null,\n    \"ORIGEN_NOMBRE\": \"Radiación nuclear\"\n}"
						}
					]
				},
				{
					"name": "Post data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Zombie Gamma\",\n  \"descripcion\": \"Un zombie resistente\",\n  \"origenId\": 2,\n  \"velocidad\": 6,\n  \"fuerza\": 8,\n  \"resistencia\": 10,\n  \"humanidad\": 4\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/v1/zombie",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"v1",
								"zombie"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": [
						{
							"name": "validation joi",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nombre\": \"Zombie Gamma\",\n  \"descripcion\": \"Un zombie resistente\",\n  \"origenId\": 2,\n  \"velocidad\": 70,\n  \"fuerza\": 90,\n  \"resistencia\": 85,\n  \"humanidad\": 15\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/v1/zombie",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"v1",
										"zombie"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "184"
								},
								{
									"key": "ETag",
									"value": "W/\"b8-6UlpI1kThnzmOu7mdXiUrHwJPW8\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 May 2025 07:15:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Validación fallida\",\n    \"details\": [\n        \"La velocidad no puede exceder 10\",\n        \"La fuerza no puede exceder 10\",\n        \"La resistencia no puede exceder 10\",\n        \"La humanidad no puede exceder 10\"\n    ]\n}"
						},
						{
							"name": "Post data",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nombre\": \"Zombie Gamma\",\n  \"descripcion\": \"Un zombie resistente\",\n  \"origenId\": 2,\n  \"velocidad\": 6,\n  \"fuerza\": 8,\n  \"resistencia\": 10,\n  \"humanidad\": 4\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/v1/zombie",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"v1",
										"zombie"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "34"
								},
								{
									"key": "ETag",
									"value": "W/\"22-HiEpFD+WgvKDjM11Km8nXUqR3MY\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 May 2025 07:19:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Zombie creado\",\n    \"id\": 6\n}"
						}
					]
				},
				{
					"name": "Update data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"nombre\": \"Zombie Alpha Updated\",\n  \"velocidad\": 10\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:4000/api/v1/zombie/6",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "4000",
							"path": [
								"api",
								"v1",
								"zombie",
								"6"
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "validation joi",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nombre\": \"Zombie Alpha Updated\",\n  \"velocidad\": 85\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/v1/zombie/6",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"v1",
										"zombie",
										"6"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "80"
								},
								{
									"key": "ETag",
									"value": "W/\"50-aav6beO0ZcHrYueevhDVwHMc9HY\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 May 2025 07:22:35 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Validación fallida\",\n    \"details\": [\n        \"La velocidad no puede exceder 10\"\n    ]\n}"
						},
						{
							"name": "Update data",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"nombre\": \"Zombie Alpha Updated\",\n  \"velocidad\": 10\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/v1/zombie/6",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"v1",
										"zombie",
										"6"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "32"
								},
								{
									"key": "ETag",
									"value": "W/\"20-b7nybRDVzoL03839rp/JRsq+8aI\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 May 2025 07:22:55 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Zombie actualizado\"\n}"
						}
					]
				},
				{
					"name": "Delete data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/info?id=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"info"
							],
							"query": [
								{
									"key": "id",
									"value": "1"
								}
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "Delete data",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://localhost:4000/api/v1/zombie/6",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "4000",
									"path": [
										"api",
										"v1",
										"zombie",
										"6"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "30"
								},
								{
									"key": "ETag",
									"value": "W/\"1e-bsulqvfkOYtV/Jmd/wD6D0U5NUo\""
								},
								{
									"key": "Date",
									"value": "Thu, 22 May 2025 07:23:39 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Zombie eliminado\"\n}"
						}
					]
				}
			]
		}
	]
}